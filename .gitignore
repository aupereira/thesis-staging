# Currently supports C, C#, C++, Java, Rust, and Python files (mostly)
*.s

.vs/
.vscode/
.vscode/settings.json

# Sources: 
# https://github.com/github/gitignore/blob/main/C.gitignore
# https://github.com/github/gitignore/blob/main/C%2B%2B.gitignore

# Prerequisites
*.d

# Object files
*.o
*.lo
*.slo
*.ko
*.obj
*.elf

# Linker output
*.ilk
*.map
*.exp

# Precompiled Headers
*.gch
*.pch

# Libraries
*.lib
*.a
*.la
*.lo
*.lai

# Shared objects (inc. Windows DLLs)
*.dll
*.so
*.so.*
*.dylib

# Executables
*.exe
*.out
*.app
*.i*86
*.x86_64
*.hex

# Debug files
*.dSYM/
*.su
*.idb
*.pdb

# Kernel Module Compile Results
*.mod*
*.cmd
.tmp_versions/
modules.order
Module.symvers
Mkfile.old
dkms.conf

# Source: https://github.com/github/gitignore/blob/main/Rust.gitignore

# Generated by Cargo
# will have compiled files and executables
**/*_rs/debug/
**/*_rs/target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
**/*_rs/Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# Source: https://github.com/github/gitignore/blob/main/Python.gitignore

# Byte-compiled / optimized / DLL files
**/__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Environments
*.env
*.venv
**/env/
**/venv/
**/ENV/
**/env.bak/
**/venv.bak/

# C#
**/*_cs/bin
**/*_cs/obj
*.sln

# Java
*.class